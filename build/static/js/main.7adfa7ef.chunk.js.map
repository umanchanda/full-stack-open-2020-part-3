{"version":3,"sources":["components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","props","name","number","onClick","deletePerson","Notification","notification","className","type","baseUrl","axios","get","newObject","post","id","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setNotification","notifyWith","message","setTimeout","useEffect","personService","then","response","data","namesToShow","person","toLowerCase","includes","value","onChange","event","target","onSubmit","preventDefault","personObject","length","some","find","window","confirm","map","catch","concat","key","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7adfa7ef.chunk.js","sourcesContent":["import React from 'react';\n\nconst Person = (props) => {\n  return (\n    <li>{props.name} {props.number} <button onClick={props.deletePerson}>delete</button></li>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n  \n  return (\n    <div className={notification.type}>\n      {notification}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst deleteObject = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default { getAll, create, deleteObject, update }","import React, { useState, useEffect } from 'react';\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')  \n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  const notifyWith = (message, type) => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    }\n\n    const isPresent = persons.some(person => person.name.includes(newName));\n    \n    if (isPresent) {\n      const person = persons.find(person => person.name === newName)\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = person.id\n        personService\n          .update(id, { ...person, number: newNumber })\n          .then(response => {\n            setPersons(persons.map(person => person.id !== id ? person : response.data))\n            notifyWith(`Modified ${newName}`, 'success');\n          })\n          .catch(() => {\n            notifyWith(`Error modifying ${newName}`, 'error')\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          notifyWith(`Added ${newName}`, 'success')\n        })\n        .catch(() => {\n          notifyWith(`Error adding ${newName}`, 'error')\n        })\n    }\n    \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id, name) => {\n    return() => {\n      if (window.confirm(`Delete ${name}?`)) {\n        personService\n          .deleteObject(id)\n          .then(response => {\n            setPersons(persons.filter(person => person.id !== response.data))\n            notifyWith(`Deleted ${name}`, 'success')\n          })\n          .catch((error) => {\n            notifyWith(`Information of ${name} has already been removed from server`, 'error')\n          })\n      }\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const namesToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <div>filter show with <input value={filter} onChange={handleFilterChange}/></div>\n\n      <h2>add a  new</h2>\n      <form onSubmit={addNewPerson}>\n        <div>name: <input value={newName} onChange={handleNameChange}/></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n\n      <h2>Numbers</h2>\n      <ul>{namesToShow.map(person => <Person key={person.id} name={person.name} number={person.number} deletePerson={deletePerson(person.id, person.name)}/>)}</ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}